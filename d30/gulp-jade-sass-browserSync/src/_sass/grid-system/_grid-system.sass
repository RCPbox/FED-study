@charset "UTF-8"

// * --------------------------------
// * 그리드 시스템 제너레이터 환경변수
$module: '%' // % , . 모듈 선택.
$page-width: 960px !default // 페이지 폭
$total-columns: 12 !default // 컬럼 총 개수
$gutter: 10px !default      // 컬럼 사이 간격: 거터
$column-width: ($page-width - ( ($gutter * 2) * $total-columns ) ) / $total-columns
$grid-layout: center !default // center, right
$support-ie6-7: false !default
// @debug type-of($grid-layout)

// * ------------------------------------
// * Alpha(First), Omega(Last), Clearfix
// * ------------------------------------
#{$module}alpha, #{$module}first
	margin-left: 0

#{$module}omega, #{$module}last
	margin-right: 0

#{$module}clearfix
	&::after 
		content: ''
		display: block
		clear: both
	@if $support-ie6-7
		#{$module}lt-ie8 &
			zoom: 1

// * --------------------------------
// * 그리드 시스템 Container 모듈
// * --------------------------------
#{$module}container
	width: $page-width
	@if $grid-layout == center
		margin: 0 auto
	@if $grid-layout == right
		margin: auto
	
	// Clearfix 확장(상속)
	// .container 클래스를 가지고 있는 것들은 자동으로 플로팅된 요소들을 감쌀수 있게 만들어 준것.
	@extend #{$module}clearfix


// * --------------------------------
// * 그리드 시스템 Column 모듈
// * --------------------------------
%grid-base
	float: left
	@if $support-ie6-7 == true
		display: inline
	// 이걸 쓰는 이유는 IE6 경우 더블플롯 마진 버그를 해결해야 하기 때문.
	margin:
		left: $gutter
		right: $gutter


// * --------------------------------
// * 그리드 시스템 Push & Pull 모듈
// * --------------------------------
%push-pull-base
	position: relative


// * --------------------------------
// * 그리드 시스템 생성 구문
// * --------------------------------
// $i: 1 // 초기값 변수
// @while $i <= $total-columns
// 	#{$module}grid_#{$i}
// 		@extend %grid-base
// 		// 컬럼 폭 x 컬럼 개수 + ( (거터 폭 x 2) x (컬럼 개수 - 1) )
// 		width: $column-width * $i + ( ($gutter * 2) * ($i - 1) )
// 	#{$module}push_#{$i}
// 		@extend %push-pull-base
// 		// 컬럼 폭 x 컬럼 개수 + ( (거터 폭 x 2) x 컬럼 개수 )
// 		left: $column-width * $i + ( ($gutter * 2) * $i )
// 	#{$module}pull_#{$i} 
// 		@extend %push-pull-base;
// 		// 컬럼 폭 x 컬럼 개수 + ( (거터 폭 x 2) x 컬럼 개수 )
// 		left: -1 * ($column-width * $i + ( ($gutter * 2) * $i ))

// 	#{$module}prefix_#{$i} 
// 		// 컬럼 폭 x 컬럼 개수 + ( (거터 폭 x 2) x 컬럼 개수 )
// 		padding-left: $column-width * $i + ( ($gutter * 2) * $i )

// 	#{$module}sufix_#{$i} 
// 		// 컬럼 폭 x 컬럼 개수 + ( (거터 폭 x 2) x 컬럼 개수 )
// 		padding-right: $column-width * $i + ( ($gutter * 2) * $i )

// 	$i: $i + 1 // 초기값 증가


// --------------------------------------------


// * --------------------------------
// * @for $i from 1 [to,through] ~
// * --------------------------------

// @for $i from 1 through 10
// 	@debug $i

@for $i from 1 through $total-columns 
	#{$module}grid_#{$i} 
		@extend %grid-base
		// 컬럼 폭 x 컬럼 개수 + ( (거터 폭 x 2) x (컬럼 개수 - 1) )
		width: $column-width * $i + ( ($gutter * 2) * ($i - 1) )

	#{$module}push_#{$i} 
		@extend %push-pull-base
		// 컬럼 폭 x 컬럼 개수 + ( (거터 폭 x 2) x 컬럼 개수 )
		left: $column-width * $i + ( ($gutter * 2) * $i )

	#{$module}pull_#{$i} 
		@extend %push-pull-base
		left: -1 * ($column-width * $i + ( ($gutter * 2) * $i ))

	#{$module}prefix_#{$i} 
		padding-left: $column-width * $i + ( ($gutter * 2) * $i )

	#{$module}sufix_#{$i} 
		padding-right: $column-width * $i + ( ($gutter * 2) * $i )
	






