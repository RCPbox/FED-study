@charset "UTF-8"

// * --------------------------------
// * Sass 반복(Loop) 구문
// 
// 	반응형이 아닌 데스트탑 용으로 편하게 쓸 수 있다.
// * 960.gs 그리드 시스템 모듈.
//
// container
// grid_[1, 2, 3, ..., n]
// push_[1, 2, 3, ..., n]
// pull_[1, 2, 3, ..., n]
// prefix_[1, 2, 3, ..., n] 앞에공간
// sufix_[1, 2, 3, ..., n] 뒷 공간
// alpha, ==first
// omega, ==last
// clearfix, clear
//
// * 설계 패턴(구현 공식)
// 페이지 폭($page-width)
// 컬럼 총 개수($total-columns)
// 컬럼 사이 간격: 거터($gutter)
//
// 컬럼 한 개의 폭을 구하는 공식: (960 - ( (10 * 2) * 12 )) / 12
// ($page-width - ( ($gutter * 2) * $total-columns ) ) / $total-columns
// * --------------------------------

// * --------------------------------
// * 그리드 시스템 컬럼 계산 함수
@function calc-columnWidth()
	@return ($page-width - ( ($gutter * 2) * $total-columns ) ) / $total-columns

// * --------------------------------
// * 그리드 시스템 제너레이터 환경변수
$page-width: 960px !default // 페이지 폭
$total-columns: 12 !default // 컬럼 총 개수
$gutter: 10px !default      // 컬럼 사이 간격: 거터
$column-width: calc-columnWidth()
$grid-layout: center !default // center, right
$support-ie6-7: false !default
// @debug type-of($grid-layout)

// * ------------------------------------
// * Alpha(First), Omega(Last), Clearfix
// * ------------------------------------
.alpha, .first
	margin-left: 0

.omega, .last
	margin-right: 0

.clearfix
	&::after 
		content: ''
		display: block
		clear: both
	@if $support-ie6-7
		.lt-ie8 &
			zoom: 1

// * --------------------------------
// * 그리드 시스템 Container 모듈
// * --------------------------------
.container
	width: $page-width
	@if $grid-layout == center
		margin: 0 auto
	@if $grid-layout == right
		margin: auto
	
	// Clearfix
	// .container 클래스를 가지고 있는 것들은 자동으로 플로팅된 요소들을 감쌀수 있게 만들어 준것.
	@extend .clearfix


// * --------------------------------
// * 그리드 시스템 Column 모듈
// * --------------------------------
%grid-base
	float: left
	@if $support-ie6-7 == true
		display: inline
	// 이걸 쓰는 이유는 IE6 경우 더블플롯 마진 버그를 해결해야 하기 때문.
	margin:
		left: $gutter
		right: $gutter


// * --------------------------------
// * 그리드 시스템 Push & Pull 모듈
// * --------------------------------
%push-pull-base
	position: relative


// * --------------------------------
// * 그리드 시스템 생성 구문
// * --------------------------------
$i: 1 // 초기값 변수
@while $i <= $total-columns
	.grid_#{$i}
		@extend %grid-base
		// 컬럼 폭 x 컬럼 개수 + ( (거터 폭 x 2) x (컬럼 개수 - 1) )
		width: $column-width * $i + ( ($gutter * 2) * ($i - 1) )
	.push_#{$i}
		@extend %push-pull-base
		// 컬럼 폭 x 컬럼 개수 + ( (거터 폭 x 2) x 컬럼 개수 )
		left: $column-width * $i + ( ($gutter * 2) * $i )
	.pull_#{$i} 
		@extend %push-pull-base;
		// 컬럼 폭 x 컬럼 개수 + ( (거터 폭 x 2) x 컬럼 개수 )
		left: -1 * ($column-width * $i + ( ($gutter * 2) * $i ))

	.prefix_#{$i} 
		// 컬럼 폭 x 컬럼 개수 + ( (거터 폭 x 2) x 컬럼 개수 )
		padding-left: $column-width * $i + ( ($gutter * 2) * $i )

	.sufix_#{$i} 
		// 컬럼 폭 x 컬럼 개수 + ( (거터 폭 x 2) x 컬럼 개수 )
		padding-right: $column-width * $i + ( ($gutter * 2) * $i )

	$i: $i + 1 // 초기값 증가


